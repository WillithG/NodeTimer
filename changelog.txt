07 Jan 2018:
  - Created changelog
  - Added basic database functionality:
    - Created users, and times tables according to current schema. 
    - Created basic functionality for pushing a new time.
  - added foundations for posting a new time from the client, this was done
  using basic js ajax techniques.

  - Added Basic Functionality for the break button - will now submit the time
  on the timer to the data base.

  08 Jan 2019:
  - Removed the Break button, combined functionality into reset button and
  submit checkbox.
  - Added submit checkbox - when checked time will be submitted on reset.
  - added keyboard shortcuts: spacebar: start/stop, enter: reset, s: toggle
  submit checkbox

  - LEARNED SO MUCH ABOUT USING ASYNC FUNCTIONS, specifically: using callbacks
  with db queries to return select results. FABULOUS =D 
  - Added total time studied today widget

  - BEFORE YOU CONTINUE, CLEAN UP YOUR FILES:
  - DOCUMENT, YOU MONG
  - SEPARATE UTIL FUNCTIONS INTO UTIL FILES, YOU CRETIN
  - PUT FORMAL TESTS IN, nobhed

10 Jan 2019:
  - Created utility directory, time utility file, and user input validation
  utility file. Moved the appropriate methods into the correct utility file
  - updated the time studied today widget to automatically update on
  submission.

11 Jan 2019:
  - Created test directory, set up mocha
  - Wrote tests for currently implmented time utility functions
  - Tests not yet all passing (complete implementation of converting from JSON
  to formatted time)

12 Jan 2019:
  - changed total_today_JSON_to_formatted to pass given tests

14 Jan 2019:
  - Added an sql file for creating the database tables, in case of another
  system change without backup.
  - Created db test file
  - wrote the tests for get_time_past_week
  - created the get_time_past_week method -> gets the total time for each day
  for the last 7 days. Will be passed to chart to show user's activity over
  the last 7 days.
  - wrote body code for get_time_past_week

15 Jan 2019:
  - cleaned up get_time_past_week to make it async friendly. 
  - TODO clean up tests to be async friendly.
  - changed the tests to be async friendly:
    added a before() and after() methods to close the connection and remove
    the test data after every test.
  - Implemented a simple chart to display the time spent studying over the
  last 7 days. 
  - fixed the width of the chart, so that it fills the window
  - changed the submission protocol to be async 
  - updated the submission protocol to update the chart as well as the time
  today widget.
  

